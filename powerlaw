Power Law

from skimage import io 
import matplotlib.pyplot as plt
from skimage.color import rgb2gray


image = io.imread('lenna_grey.jpg')
image.shape

image=rgb2gray(image)
image.shape

plt.figure(figsize=(11,11))
plt.subplot(1,3,1)
plt.imshow(image)
plt.subplot(1,3,2)
plt.imshow(image,cmap='gray')

image[10,5]

image_denorm=255*image
image_denorm[10,5]

[rows,cols]=image_denorm.shape

def power_law(pix,gamma):
  temp=pix**gamma
  return temp

gamma=0.8

image_power1=image_denorm.copy()
for r in range(rows):
  for c in range(cols):
    pixel=image_denorm[r][c]
    pixel_modi=power_law(pixel,gamma)
    image_power1[r][c]=pixel_modi


plt.figure(figsize=(11,11)) 
plt.subplot(1,3,1,)
plt.imshow(image_denorm,cmap='gray')
plt.title('Original Image')
plt.subplot(1,3,2)
plt.imshow(image_power1,cmap='gray')
plt.title('gamma<1') 
# image becomes slightly lighter due to gamma value being < 1 
# acc to power law transformation, lower the value of gamma, brighter is image

gamma1=1.5

image_power2=image_denorm.copy()
for r in range(rows):
  for c in range(cols):
    pixel=image_denorm[r][c]
    pixel_modi=power_law(pixel,gamma1)
    image_power2[r][c]=pixel_modi

plt.figure(figsize=(11,11)) 
plt.subplot(1,3,1,)
plt.imshow(image_denorm,cmap='gray')
plt.title('Original Image') #original unedited image 
plt.subplot(1,3,2)
plt.imshow(image_power1,cmap='gray')
plt.title('Gamma < 1') #displays image when gamma is less than 1, the image is lighter than the original image
plt.subplot(1,3,3)
plt.imshow(image_power2,cmap='gray')
plt.title('Gamma > 1') #displays image when gamma is greater than 1, the image is darker than the original image 

image_negative=image_denorm.copy()
for r in range(rows):
  for c in range(cols):
    pix=image_negative[r][c]
    pix_modi=255-pix 
    image_negative[r][c]=pix_modi

plt.figure(figsize=(11,11))
plt.subplot(1,2,1)
plt.imshow(image_denorm, cmap='gray')
plt.title('Original Image')
plt.subplot(1,2,2)
plt.imshow(image_negative,cmap='gray')
plt.title('Negative Image')

image_t=io.imread('watch.png')
image_t.shape

plt.figure()
plt.imshow(image_t)

image_t_gray= rgb2gray(image_t)
image_th1=image_t_gray.copy()
image_t_gray= 255*image_t_gray

[rows,cols]=image_t_gray.shape

th=150

for r in range(rows):
  for c in range(cols):
    if image_th1[r][c]>th:
      image_th1[r][c]=255

plt.figure(figsize=(10,10))
plt.subplot(1,3,1)
plt.imshow(image_t_gray, cmap='gray')
plt.title('Original Image')
plt.subplot(1,3,2)
plt.imshow(image_th1, cmap='gray')
plt.title('Thresholding with background')

image_th2=image_t_gray.copy()
th=150
for r in range(rows):
  for c in range(cols):
    if image_th2[r][c]>th:
      image_th2[r][c]=255
    else:
      image_th2[r][c]=0

plt.figure(figsize=(10,10))
plt.subplot(1,3,1)
plt.imshow(image_t_gray, cmap='gray')
plt.title('Original Image')
plt.subplot(1,3,2)
plt.imshow(image_th1, cmap='gray')
plt.title('Thresholding with background')
plt.subplot(1,3,3)
plt.imshow(image_th2, cmap='gray')
plt.title('Thresholding without background')

Conclusion:
For the given test image, power law transformation is applied with two values of gamma:- 
for gamma = 0.8, the given image becomes brighter;
if the gamma value is reduced further to 0.5, the image becomes brighter than the image for gamma = 0.8.

for gamma = 1.4, the given image becomes darker.


Image negative is performed on the given image,
the pixel intensity from black to white is changed to white to black 

Thresholding is applied on the given test image with a threshold value of 150.
The resulting image shows the objects having intensity > 150 as white objects and the remaining objects are unchanged. 

To convert the image to binary image, threshold of 150 is used. All pixels with intensity > 150 turn white and the remaining turn black. 
